<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta content="text/html; charset=iso-8859-2" http-equiv="Content-Type">
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<style>
.mySlides {display:none;}
</center>
</style>
</head>

<body>		
<div class="w3-content w3-section" style="max-width:100%">
  <img class="mySlides" src="https://mir-s3-cdn-cf.behance.net/project_modules/max_1200_webp/d74aa0161597101.63c93fe63a392.gif" style="width:98%"> 
   </div>
<script>
var myIndex = 0;
carousel();

function carousel() {
  var i;
  var x = document.getElementsByClassName("mySlides");
  for (i = 0; i < x.length; i++) {
    x[i].style.display = "none";  
  }
  myIndex++;
  if (myIndex > x.length) {myIndex = 1}    
  x[myIndex-1].style.display = "block";  
  setTimeout(carousel, 8000); // Change image every 3 seconds
}
</script>
</body>
</html>

<center>
<html lang="en"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><title>BY ACHI THO BIRLED</title>
<link href="https://niazitv.com/jtv/style.css" rel="stylesheet">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
		<script src="https://s0.2mdn.net/instream/video/client.js" async="" type="text/javascript"></script><script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.11.2/css/all.min.css">
		<style>
			:root {
				--hfs: 2vmax;
				--primaryColor: red;
				--secondaryColor: black;
				--secondaryOpposite: white;
			}
			.rmp-time-total,.rmp-loaded,.rmp-handle,.rmp-current{
                border-radius:15px!important;
            }
            .rmp-handle{
                width:100%!important;
                height:100%!important;
            }.rmp-current{
                padding:5px!important;
            }.rmp-time-total{
                border:none!important;
            }
			::-webkit-scrollbar {
				width: 0em;
				height: 0em;
			}
			::-webkit-scrollbar-thumb {
				background: var(--secondaryColor);
			}
			::-webkit-scrollbar-track {
				background: none;
			}
			* {
				-webkit-user-select: none;
				-moz-user-select: none;
				-ms-user-select: none;
				user-select: none;
			}
			body {
				background-color: var(--secondaryColor);
			}

			.alignleft {
				float: left;
				margin-left: 5px;
				font-weight: bold;
				font-size: 15px;
			}

			.alignright {
				float: right;
				margin-right: 10px;
				color: var(--primaryColor);
				font-weight: normal;
                font-size: 25px;
			}

			h4 {
				margin-left: 5px;
				color: var(--primaryColor);
				font-weight: bold;
				font-size: 15px;
			}

			.nta {
				position: relative;
				overflow: hidden;
				color: var(--primaryColor);
			}

			div.scrollmenu {
				background-color: var(--secondaryColor);
				overflow: auto;
				white-space: nowrap;
				position: relative;
				overflow-y: hidden;
			}

			div.scrollmenu a {
				display: inline-block;
				color: var(--secondaryOpposite);
				text-align: center;
				padding: 4px;
				text-decoration: none;
			}

			div.scrollmenu a:hover {
				background-color: var(--secondaryColor);
			}

			.cen {
				position: relative;
				text-align: center;
				color: var(--secondaryOpposite);
			}

			.centered {
				font-size: var(--hfs);
				font-weight: bold;
				position: absolute;
				top: 80%;
				left: 50%;
				transform: translate(-50%, -50%);
			}

			.cent {
				font-size: auto;
				position: absolute;
				top: 95%;
				left: 50%;
				transform: translate(-50%, -50%);
			}

			.nt {
				width: 100%;
				border-radius: 10px;
				height: 100%;
				z-index: 1;
			}

			.mnt {
				width: 100px;
				border-radius: 2px;
				height: 100px;
			}
			.item img {
				border-radius: 10px;
			}
			#content-container {
				margin-bottom: 30px;
			}
			footer {
				display: grid;
				grid-gap: 0.5em;
				grid-template-columns: repeat(5, minmax(10px, 1fr));
				position: fixed;
				bottom: 0;
				left: 0;
				width: 100%;
				background-color: var(--secondaryColor);
				padding: 0px 4px 10px;
				justify-content: center;
				align-items: center;
                font-size:18px;
			}
			footer a {
				text-align: center;
				color: var(--primaryColor);
			}
			footer a:nth-child(3) i {
				background: var(--primaryColor);
				border-radius: 100%;
				padding: 10px 10px;
				color: var(--secondaryOpposite);
				margin-top: -40px;
				border: 2px solid var(--secondaryColor);
			}
		</style>
		
<style>::-webkit-scrollbar{
    display:none
}
*{
    -ms-overflow-style:none;
    scrollbar-width:none
}
body{
    margin:0;
    background:#f5f5f5;
    font-family:Arial,Helvetica,sans-serif;
    line-height:1.5;
    color:white;
    scroll-behavior:smooth;
    text-align:center;
}
#player-wrapper{
    width:100%;
    z-index:999;
}
.sticky{
    position:fixed;
    top:0;
    width:100%
}
#status{
    position:fixed;
    bottom:0;
    right:0;
    width:100%;
    background:#fff;
    display:none;
}
.col-sm-2{
    border-radius:4px
}
.sp{
    width:50%;
    height:100%;
    clear:both;
    margin:20px auto
}
.sp-texture{
    border:1px #000 solid;
    border-radius:4px;
    position:relative;
    background:linear-gradient(45deg,transparent 49%,#000 50%,#000 50%,transparent 51%,transparent),linear-gradient(-45deg,transparent 49%,#000 50%,#000 50%,transparent 51%,transparent);
    background-size:16px 16px;
    background-position:0 0;
    -webkit-animation:spTexture 1s infinite linear;
    animation:spTexture 1s infinite linear;
    color:#000;
    text-align:center;
    line-height:3em;
    font-family:roboto
}
@-webkit-keyframes spTexture{
    from{
        background-position:0 0
    }
    to{
        background-position:-16px 0
    }
}
@keyframes spTexture{
    from{
        background-position:0 0
    }
    to{
        background-position:-16px 0
    }
}
.heading{
    margin:5px auto;
    text-align:center
}
#rmpPlayer{
    z-index:999
}
.white{
    color:#fff
}
.red{
    color:red
}
.yellow{
    color:#ffdd40
}
footer{
    color:#fff;
    text-align:center
}
footer p{
    margin-bottom:20px;
    margin-top:-10px
}
.animated{
    font-family:sans;
    margin:0;
    padding:0;
    font-size:25px;
    background:url(https://upload.wikimedia.org/wikipedia/commons/3/3b/ColorRotateHr.gif) no-repeat;
    background-clip:text;
    -webkit-background-clip:text;
    color:transparent;
    animation:moveBg 40s linear infinite;
    -webkit-animation:moveBg 40s linear infinite
}
@keyframes moveBg{
    0%{
        background-position:0 30%
    }
    100%{
        background-position:100% 50%
    }
}
.blink{
    animation-name:blinker;
    animation-duration:1s;
    animation-timing-function:linear;
    animation-iteration-count:infinite
}
@keyframes blinker{
    0%{
        opacity:1
    }
    50%{
        opacity:0
    }
    100%{
        opacity:1
    }
}
*{
    -webkit-touch-callout:none;
    -webkit-user-select:none;
    -khtml-user-select:none;
    -moz-user-select:none;
    -ms-user-select:none;
    user-select:none
}
body{
    background:#000!important;
    overflow:hidden;
    color:white;
}
.parent{
    background:rgba(0,0,0,.9);
    font-family:"Source Sans Pro",sans-serif;
    margin:0;
    display:flex;
    align-items:center;
    justify-content:center;
    flex-direction:column;
    position:fixed;
    top:0;
    height:100%;
    width:100%;
    z-index:999999
}
.blobs-container{
    display:flex
}
.blob img{
    width:50%;
    display:none;
    margin:auto;
    margin-top:25px
}
.loading{
    color:#000;
    display:block;
    text-align:center;
    position:relative;
    top:30px;
    left:-2px;
    background:rgba(255,255,255,.9);
    padding:0 10px;
    border-radius:3px;
    width:80%;
    margin:auto;
    font-size:10px
}

.print{height:75px;
width:75px;
border-radius:5px;
border:1.5px solid #999;
padding:2px;
 margin:3px;
 border-radius:50%;

}
.print:hover{height:75px;
width:75px;
border:2px solid red;
border-radius:50px;webkit-box-shadow: 0px 10px 0px 0px rgba(255,0,0,1);
-moz-box-shadow: 0px 10px 0px 0px rgba(255,0,0,1);
box-shadow: 0px 3px 20px 3px rgba(255,0,0,100);}
.print:active{height:75px;
width:75px;
border:2px solid red;
border-radius:50px;
webkit-box-shadow: 0px 10px 0px 0px rgba(0,255,0,1);
-moz-box-shadow: 0px 10px 0px 0px rgba(0,255,0,1);
box-shadow: 0px 3px 20px 3px rgba(0,255,0,100);}
marquee{
border-radius: 6px 0px 0px  6px;
width: 90%;
border:2px solid red;
margin: auto;
   font-weight:bold;
   color:#fff;
display: block;}

.marquee span{display: inline-block;
 background: #ff0000;
 border-radius:  0px 6px 6px 0px;
  padding: 0px 10px;
   color: #fff;
   padding:2px;
   font-weight:bold;
    display: inline-block;
     float: right;
      width: auto;
       line-height: 35px;}
       .marquee marquee{display: block;
        line-height: 35px;
         z-index: -1; 
         margin-right: 10px;
          width: auto; 
          margin: auto;}
</style>
<link id="rmp-dress-code" type="text/css" rel="stylesheet" href="https://cdn.radiantmediatechs.com/rmp/5.9.2/css/rmp-s4.min.css"></head><body style="overflow: auto;">
</script><h2 class="animated" align="center">BY ACHI JIE THO</h2><span class="logoText"></span></h2><div id="buttons-list" style="margin-top: 10.5px;">
<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
        <title>LIVE STREAM</title>
        <style>
            ::-webkit-scrollbar {
                display: none;
            }
            :root {
                --plyr-color-main: #000;
            }
            * {
                -ms-overflow-style: none;
                scrollbar-width: none;
                -webkit-touch-callout: none;
                -webkit-user-select: none;
                -khtml-user-select: none;
                -moz-user-select: none;
                -ms-user-select: none;
                user-select: none;
                outline:none;
            }
            body {
                margin: 0;
                background: #000;
                font-family: Arial, Helvetica, sans-serif;
                line-height: 1.5;
                color: #fff;
                text-align: center;
            }
            #root button {
                display:inline-block;
                margin: 5px auto;
                padding: 5px;
                font-size: 15px;
                border: none;
                border-radius: 3px;
                background: none;
                color: #fff;
                /*border: 2px solid #000;*/
                text-transform: capitalize;
            }
            #root button:hover {
                background-color: #000;
                color: #fff;
                cursor:pointer;
               
            }
            .box.flex {
                display: flex;
                justify-content: center;
                flex-wrap: wrap;
                align-items: center;
                padding-top:0%;
                vertical-align: middle;
                
            }
            .box {
                box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.03);
                border-radius: 0px;
                color: #fff;
                border-bottom: 1px solid #fff;
                vertical-align: middle;
            }
            .box .card img {
                cursor: pointer;
                max-width: 90px;
                text-align: center;
                background: rgba(255, 255, 255, 0.5);
                margin: 0.25rem;
                padding: 0.25rem;
                border: 2px solid #000;
                border-radius: 6px;
            }
            .heading {
                margin: 5px auto;
                text-align: center;
                
            }
            #playerContainer {
                z-index: 999;
                width:100%;
                position: fixed;
            }
            .white {
                color: #000;
            }
            .red {
                color: red;
            }
            .yellow {
                color: #000;
            }
            footer {
                color: #000;
                text-align: center;
            }
            footer p {
                margin-bottom: 20px;
                margin-top: -10px;
            }
            .blink {
                animation-name: blinker;
                animation-duration: 1s;
                animation-timing-function: linear;
                animation-iteration-count: infinite;
            }
            @keyframes blinker {
                0% {
                    opacity: 1;
                }
                50% {
                    opacity: 0;
                }
                100% {
                    opacity: 1;
                }
            }


            .rmp-time-total,.rmp-loaded,.rmp-handle,.rmp-current{
                border-radius:15px!important;
            }
            .rmp-handle{
                width:20px!important;
                height:20px!important;
            }.rmp-current{
                padding:5px!important;
            }.rmp-time-total{
                border:none!important;
            }
            .logo{
            	width:100px;
            height:100px;
            border-radius: 50px;
            border:5px solid black;
            	}
            
marquee{
border-radius: 6px 0px 0px 6px;
width: 90%;
border:2px solid red;
margin: auto;
   font-weight:bold;
display: block;}

.marquee span{display: inline-block;
 background: #000;
 border-radius: 0px 6px 6px 0px;
  padding: 0px 10px;
   color: #fff;
   padding:2px;
   font-weight:bold;
    display: inline-block;
     float: right;
      width: auto;
       line-height: 35px;}
       
       .marquee marquee{display: block;
        line-height: 35px;
         z-index: -1; 
         margin-right: 10px;
         margin-top:0%;
          width: auto; 
}
        </style>
<html>
<head>
		<body>
</style>
<!DOCTYPE html>
<html>
<head>
	<body>
 <body style="background: #000;
  margin-top: 50px;
  -ms-overflow-style: none;  
  scrollbar-width: none;">
<div class="split left">
<div class="outer" style="padding:0px">
<div class="header-area" >
      <div class="setting-wrapper"> 
       <div class="header-content header-style-five position-relative d-flex align-items-center justify-content-between">   
 <style>
	a{
		text-decoration:none;
		}
	</style>	     	
<div class="col-6" style="padding:0px;">  
<div class="card game-itme border-0 list-levels" style="margin:5px;padding:0px;"><a href="https://achithovhenrank01.github.io/santai/home/by-achi.html">
<div class="w-100 time-is-captitle" style="text-align:center;padding:0px;margin-left:0"><font style="font-weight:600;color:#fff"><i class="bi bi-download"></i><span class="blink">KLIK DI SINI UNTUK MEMBUKA VOD</span>
</font></div></a></div>
   </div> 
   </head>
	</body>
	</html>
<html>
<head>
		<body>
</style>
<a href="intent://ott-balancer.tvri.go.id/live/eds/Nasional/hls/Nasional-avc1_1500000=10003-mp4a_96000_eng=20001.m3u8#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.genuine.leone;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://klik.tvri.go.id/po-content/uploads/tvrinasional.jpg"  border="3px"></li>
<a href="intent://ott-balancer.tvri.go.id/live/eds/DKI/hls/DKI-avc1_1500000=10003-mp4a_96000=20001.m3u8#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.genuine.leone;S.title=Golive;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://klik.tvri.go.id/po-content/uploads/tvrijtown.jpg"  border="3px"></li>
<a href="intent://ott-balancer.tvri.go.id/live/eds/TVRIWorld/hls/TVRIWorld-avc1_1500000=10003-mp4a_96000_eng=20003.m3u8#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://klik.tvri.go.id/po-content/uploads/tvrinasional.jpg"  border="3px"></li>
<a href="intent://ott-balancer.tvri.go.id/live/eds/SportHD/hls/SportHD-avc1_1500000=10003-mp4a_96000_eng=20003.m3u8#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://klik.tvri.go.id/po-content/uploads/tvrinasional.jpg"  border="3px"></li>
<a href="intent://ott-balancer.tvri.go.id/live/eds/Ambon/hls/Ambon-avc1_1500000=10006-mp4a_96000=20001.m3u8#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://klik.tvri.go.id/po-content/uploads/maluku.png"  border="3px"></li>
<a href="intent://ott-balancer.tvri.go.id/live/eds/Bali/hls/Bali-avc1_1500000=10003-mp4a_96000=20001.m3u8#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://klik.tvri.go.id/po-content/uploads/tvribali.png"  border="3px"></li>
<a href="intent://ott-balancer.tvri.go.id/live/eds/Babel/hls/Babel-avc1_1500000=10003-mp4a_96000=20001.m3u8#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://klik.tvri.go.id/po-content/uploads/bangka.png"  border="3px"></li>
<a href="intent://ott-balancer.tvri.go.id/live/eds/Bengkulu/hls/Bengkulu-avc1_1500000=10007-mp4a_96000=20001.m3u8#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://klik.tvri.go.id/po-content/uploads/bengkulu.png"  border="3px"></li>
<!DOCTYPE html>
<html>
<head>
	<body>
 <body style="background: #000;
  margin-top: 50px;
  -ms-overflow-style: none;  
  scrollbar-width: none;">
<div class="split left">
<div class="outer" style="padding:0px">
<div class="header-area" >
      <div class="setting-wrapper"> 
       <div class="header-content header-style-five position-relative d-flex align-items-center justify-content-between">   
 <style>
	a{
		text-decoration:none;
		}
	</style>	     	
<div class="col-6" style="padding:0px;">  
<div class="card game-itme border-0 list-levels" style="margin:5px;padding:0px;"><a href="https://achithovhenrank01.github.io/jeco-play/flayin/kere/tr-1.html">
<div class="w-100 time-is-captitle" style="text-align:center;padding:0px;margin-left:0"><font style="font-weight:600;color:#fff"><i class="bi bi-download"></i><span class="blink">KLIK DI SINI UNTUK MEMBUKA SEMUA TVRI</span>
</font></div></a></div>
   </div> 
   </head>
	</body>
	</html>
<a href="intent://cdnjkt4.transvision.co.id:1000/live/master/1/4028c6856c3db2cc016cd6e773b02392/manifest.mpd|referer=https://cdnjkt4.transvision.co.id/&User-agent=Mozilla/5.0 (Linux; Android 9; CPH2083 Build/PPR1.180610.011) AppleWebKit/537.36|drmScheme=widevine&drmLicense=https://lic-cubmux.konslet.workers.dev/4rr0w/play.wv#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.genuine.leone;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://cdnjkt4.transvision.co.id:1000/image/web/channel/4028c68574537fcd0174be4f342858e9/295eb53a7aa04fbca2eeb58a3fab1f2f.png"  border="3px"></li>
<a href="intent://cdnjkt4.transvision.co.id:1000/live/master/5/4028c6856c3db2cc016cd6e647532391/manifest.mpd|referer=https://cdnjkt4.transvision.co.id/&User-agent=Mozilla/5.0 (Linux; Android 9; CPH2083 Build/PPR1.180610.011) AppleWebKit/537.36|drmScheme=widevine&drmLicense=https://lic-cubmux.konslet.workers.dev/4rr0w/play.wv#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.genuine.leone;S.title=Golive;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://cdnjkt4.transvision.co.id:1000/image/web/channel/4028c68574537fcd0174be4d55ce58dd/7862982cb44d4e8bbc61a630beca66f6.png"  border="3px"></li>
<a href="intent://cdnjkt4.transvision.co.id:1000/live/master/1/4028c6856c3db2cc016cd6ebd82f2396/manifest.mpd|referer=https://cdnjkt4.transvision.co.id/&User-agent=Mozilla/5.0 (Linux; Android 9; CPH2083 Build/PPR1.180610.011) AppleWebKit/537.36|drmScheme=widevine&drmLicense=https://lic-cubmux.konslet.workers.dev/4rr0w/play.wv#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://cdnjkt4.transvision.co.id:1000/image/web/channel/4028c68574537fcd0174be5ef52a5904/441b76dc2d004adda2945df43736dd02.png"  border="3px"></li>
<a href="intent://cdnjkt4.transvision.co.id:1000/live/master/1/4028c6856c3db2cc016cd6e825832393/manifest.mpd|referer=https://cdnjkt4.transvision.co.id/&User-agent=Mozilla/5.0 (Linux; Android 9; CPH2083 Build/PPR1.180610.011) AppleWebKit/537.36|drmScheme=widevine&drmLicense=https://lic-cubmux.konslet.workers.dev/4rr0w/play.wv#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://cdnjkt4.transvision.co.id:1000/image/web/channel/4028c68574537fcd0174be51092e58f1/9eec8914d4f74ee5a5f4d988c2965902.png"  border="3px"></li>
<a href="intent://cdnjkt4.transvision.co.id:1000/live/master/4/4028c6856c3db2cc016cd6e8eda22394/manifest.mpd|referer=https://cdnjkt4.transvision.co.id/&User-agent=Mozilla/5.0 (Linux; Android 9; CPH2083 Build/PPR1.180610.011) AppleWebKit/537.36|drmScheme=widevine&drmLicense=https://lic-cubmux.konslet.workers.dev/4rr0w/play.wv#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://cdnjkt4.transvision.co.id:1000/image/web/channel/4028c68574537fcd0174be52f87b58f2/ffb50ac11f9f42758882f58ff62273be.png"  border="3px"></li>
<a href="intent://cdnjkt4.transvision.co.id:1000/live/master/4/4028c6856c3db2cc016cd6e9c5992395/manifest.mpd|drmScheme=widevine&drmLicense=https://lic-cubmux.konslet.workers.dev/4rr0w/play.wv#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.genuine.leone;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://cdnjkt4.transvision.co.id:1000/image/web/channel/4028c68585a0014401863437adf82243/08882f0d830a45f9800649ee6536e6e8.png"  border="3px"></li>
<a href="intent://cdnjkt4.transvision.co.id:1000/live/master/4/4028c685651d7bcc01651f0b6d210096/manifest.mpd|drmScheme=widevine&drmLicense=https://lic-cubmux.konslet.workers.dev/4rr0w/play.wv#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.genuine.leone;S.title=Golive;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://cdnjkt4.transvision.co.id:1000/image/web/channel/4028c68574537fcd0174be43042758d8/36f75de0a5b543da8d17c46db9d44178.jpg"  border="3px"></li>
<a href="intent://cdnjkt4.transvision.co.id:1000/live/master/4/4028c685651d7bcc01651f0db0bf0097/manifest.mpd|drmScheme=widevine&drmLicense=https://lic-cubmux.konslet.workers.dev/4rr0w/play.wv#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://cdnjkt4.transvision.co.id:1000/image/web/channel/4028c68574537fcd0174be45631158d9/2165ad80418941528715202210307fb6.jpg"  border="3px"></li>

<!DOCTYPE html>
<html>
<head>
	<body>
 <body style="background: #000;
  margin-top: 50px;
  -ms-overflow-style: none;  
  scrollbar-width: none;">
<div class="split left">
<div class="outer" style="padding:0px">
<div class="header-area" >
      <div class="setting-wrapper"> 
       <div class="header-content header-style-five position-relative d-flex align-items-center justify-content-between">   
 <style>
	a{
		text-decoration:none;
		}
	</style>	     	
<div class="col-6" style="padding:0px;">  
<div class="card game-itme border-0 list-levels" style="margin:5px;padding:0px;"><a href="https://achithovhenrank01.github.io/jeco-play/flayin/tr/achi/saja.html">
<div class="w-100 time-is-captitle" style="text-align:center;padding:0px;margin-left:0"><font style="font-weight:600;color:#fff"><i class="bi bi-download"></i><span class="blink">KLIK DI SINI UNTUK MEMBUKA SEMUA TRANSVISION</span>
</font></div></a></div>
   </div> 
   </head>
	</body>
	</html>
<a href="intent://atemecdnbalancer-voe.sysln.id/live/eds/IndosiarHD/mpd/IndosiarHD.mpd|drmScheme=clearkey&drmLicense=5eaddccd893a47ac8b65f9b31963a3ae:881afa67ea57b41c1822d745d67559e6#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://thumbor.prod.vidiocdn.com/6_ilo1sVpgPuKNo0D1xeHwZNVw0=/filters:quality(70)/vidio-web-prod-livestreaming/uploads/livestreaming/image/205/indosiar-bb689b.jpg"  border="3px"></li>
<a href="intent://atemecdnbalancer-voe.sysln.id/live/eds/SCTVHD/mpd/SCTVHD.mpd|drmScheme=clearkey&drmLicense=a79a188263724bfcaafc4a7c3b3cd8ce:4d4732d93e6720de0ef884d7106e14f7#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://thumbor.prod.vidiocdn.com/g4J3EusX-82HUNz7uYuPBN-zUCM=/640x360/filters:quality(70)/vidio-web-prod-livestreaming/uploads/livestreaming/image/204/sctv-f23abc.jpg"  border="3px"></li>
<a href="intent://melon-live-cdn.mncnow.id/live/eds/MNCTV-HD/sa_dash_vmx/MNCTV-HD.mpd|referer=https://visionplus.id/&User-agent=Mozilla/5.0 (Linux; Android 9; CPH2083 Build/PPR1.180610.011) AppleWebKit/537.36|drmScheme=clearkey&drmLicense=828e0aba9825c3546a2831e4c0c36f7f:f85d3dcd38981368ab3da597e97ebdcc#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://www.visionplus.id/images/repository/949/49949-SNAPSHOT-m.png"  border="3px"></li>
<a href="intent://1mnctv-eg.rctiplus.id/mnctv-sdi.m3u8#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.genuine.leone;S.title=Golive;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://www.visionplus.id/images/repository/949/49949-SNAPSHOT-m.png"  border="3px"></li>
<a href="intent://melon-live-cdn.mncnow.id/live/eds/RCTI-DD/sa_dash_vmx/RCTI-DD.mpd|referer=https://visionplus.id/&User-agent=Mozilla/5.0 (Linux; Android 9; CPH2083 Build/PPR1.180610.011) AppleWebKit/537.36|drmScheme=clearkey&drmLicense=9ba3e153ef8956d6e2b0684fcf74f58f:dbc28cb5c6426080f984a5b6d436bb30#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://www.visionplus.id/images/repository/946/49946-SNAPSHOT-m.png"  border="3px"></li>
<a href="intent://1rcti-eg.rctiplus.id/rcti-sdi.m3u8#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.genuine.leone;S.title=Golive;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://www.visionplus.id/images/repository/946/49946-SNAPSHOT-m.png"  border="3px"></li>
<a href="intent://melon-live-cdn.mncnow.id/live/eds/GTV-HD/sa_dash_vmx/GTV-HD.mpd|referer=https://visionplus.id/&User-agent=Mozilla/5.0 (Linux; Android 9; CPH2083 Build/PPR1.180610.011) AppleWebKit/537.36|drmScheme=clearkey&drmLicense=88f6c7cbd793374cb5f12d7e26dcd63b:e82daa7c7bfb03d99327463fdbd37336#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://www.visionplus.id/images/repository/951/49951-SNAPSHOT-m.png"  border="3px"></li>
<a href="intent://1gtv-eg.rctiplus.id/gtv-sdi.m3u8#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.genuine.leone;S.title=Golive;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://www.visionplus.id/images/repository/951/49951-SNAPSHOT-m.png"  border="3px"></li>
<!DOCTYPE html>
<html>
<head>
	<body>
 <body style="background: #000;
  margin-top: 50px;
  -ms-overflow-style: none;  
  scrollbar-width: none;">
<div class="split left">
<div class="outer" style="padding:0px">
<div class="header-area" >
      <div class="setting-wrapper"> 
       <div class="header-content header-style-five position-relative d-flex align-items-center justify-content-between">   
 <style>
	a{
		text-decoration:none;
		}
	</style>	     	
<div class="col-6" style="padding:0px;">  
<div class="card game-itme border-0 list-levels" style="margin:5px;padding:0px;"><a href="https://achithovhenrank01.github.io/jeco-play/flayin/kere/vs-1.html">
<div class="w-100 time-is-captitle" style="text-align:center;padding:0px;margin-left:0"><font style="font-weight:600;color:#fff"><i class="bi bi-download"></i><span class="blink">KLIK DI SINI UNTUK MEMBUKA SEMUA VISION PLUS</span>
</font></div></a></div>
   </div> 
   </head>
	</body>
	</html>
<a href="intent://d25tgymtnqzu8s.cloudfront.net/smil:tv1/manifest.mpd#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Golive;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://rtm-images.glueapi.io/320x0/live_channel/tv1_bckg.png"  border="3px"></li>
<a href="intent://d25tgymtnqzu8s.cloudfront.net/smil:tv2/manifest.mpd#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Golive;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://rtm-images.glueapi.io/320x0/live_channel/SALURAN_1920x1080px_TV2.jpg"  border="3px"></li>
<a href="intent://tonton-live-ssai.akamaized.net/live/2dd2b7cd-1b34-4871-b669-57b5c9beca23/cmaf.isml/.m3u8#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Golive;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTjfUWFcpypFYEVLSlVFRf-t5_Vm3Ch7NZppw&usqp=CAU"  border="3px"></li>
<a href="intent://d25tgymtnqzu8s.cloudfront.net/smil:tv6/manifest.mpd#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Golive;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://rtm-images.glueapi.io/320x0/live_channel/SALURAN_1920x1080px_TV6.jpg"  border="3px"></li>
<a href="intent://tonton-live-ssai.akamaized.net/live/0e27ef78-4cc9-4c62-bec9-5c946c9e7354/cmaf.isml/.m3u8#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Golive;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTnXJyaS3RhQOWNcF9baM_DyAu8twsPFiQexMCUpywarDa_GeTcEqVkHhYB&s=10"  border="3px"></li>
<a href="intent://tonton-live-ssai.akamaized.net/live/2020783a-0303-401a-9c92-b7c3c9108c0b/cmaf.isml/.m3u8#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Golive;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSjthq8zsC5Pq7AegSlavrvkpywyEDZU2eCIg&usqp=CAU"  border="3px"></li>
<a href="intent://d25tgymtnqzu8s.cloudfront.net/smil:rakyat/playlist.m3u8?id=7|referer=https://rtm-player.glueapi.io/&user-agent=Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Mobile Safari/537.36#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Golive;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://rtm-images.glueapi.io/320x0/live_channel/PDR_bckg.png"  border="3px"></li>
<a href="intent://d25tgymtnqzu8s.cloudfront.net/smil:negara/playlist.m3u8?id=8|referer=https://rtm-player.glueapi.io/&user-agent=Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Mobile Safari/537.36#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Golive;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://rtm-images.glueapi.io/320x0/live_channel/7.png"  border="3px"></li>
<a href="intent://d25tgymtnqzu8s.cloudfront.net/smil:okey/manifest.mpd#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Golive;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://rtm-images.glueapi.io/320x0/live_channel/SALURAN_1920x1080px_TVOKEY.jpg"  border="3px"></li>
<a href="intent://d25tgymtnqzu8s.cloudfront.net/smil:sukan/manifest.mpd#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Golive;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://rtm-images.glueapi.io/320x0/live_channel/SALURAN_1920x1080px_SUKANRTM.jpg"  border="3px"></li>
<a href="intent://d25tgymtnqzu8s.cloudfront.net/smil:berita/playlist.m3u8?id=5|referrer=https://widevine.licenses4.me/&User-agent=REDLINECLIENT|drmScheme=widevine&drmLicense=https://mrpw.ptmnc01.verspective.net/?deviceId=NDIzMDJhZmUtYWRjMi0zNGJkLTkyN2EtYmE1ZDFlZWIwODEz#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.genuine.leone;S.title=Golive;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://rtm-images.glueapi.io/320x0/live_channel/berita_bckg.png"  border="3px"></li>
<a href="intent://ce2388031147403ca25a81e56607a193.mediatailor.ap-southeast-1.amazonaws.com/v1/dash/7d6144f66f990e10fc667942d522b82f89ae5cd9/FAST_1_Ad/dash.mpd?aws.sessionId=44e175e1-eb16-4e7c-8aaa-e04e865974e9|referer=https://visionplus.id/&User-agent=Mozilla/5.0 (Linux; Android 9; CPH2083 Build/PPR1.180610.011) AppleWebKit/537.36|drmScheme=clearkey&drmLicense=b541612bcb4598f60c4efc1733b5d8c9:7e6d2819c0912a204fd5478f8a60d1b5#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjsfovavMJQQ7TB1vP2ituSZLUEh_hQ4A3xnGM1gUJRYxjTyw0sD7sgbz9OK_VWaupt8WgZ_DPRee08EIu7_Qkj7odIlJUpAFnfMeqykS2rNJeqvKbkJbeMgo9qNjsRbTkNMt8SxhHqcxljrbf9prWtzV7wqf8JSVSsadOqsGCc3yoJ8v5DnNt-uH-Z18c/s320/20240206-025649.png"  border="3px"></li>
<a href="intent://78470390525b4b03b023113696878114.mediatailor.ap-southeast-1.amazonaws.com/v1/dash/7d6144f66f990e10fc667942d522b82f89ae5cd9/FAST_2_Ad/dash.mpd?aws.sessionId=e5afa272-3bef-427f-9c68-976c25e8d27b|referer=https://visionplus.id/&User-agent=Mozilla/5.0 (Linux; Android 9; CPH2083 Build/PPR1.180610.011) AppleWebKit/537.36|drmScheme=clearkey&drmLicense=b541612bcb4598f60c4efc1733b5d8c9:7e6d2819c0912a204fd5478f8a60d1b5#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEik0MSxwrH82jCK4QvfQ03f1rf2KrfvfLTxt8k-dKziqRbx8-GUuNNYwsXAAK5vIQXs2OhY08pZOjT6cmkWpXH52zow9GSvuA3N3hLq4HQu3tiOqMuMtjtmvuCsVbElJdOaAlIBvSgHhcuDv4DunUepcHTu3PvE5QL_6pA9Wb0UHs3ASMSfidqzTdYCYdA/s300/20240206-025657.png"  border="3px"></li>
<a href="intent://770c1b3657e94bc4b76ecd3e12882bcc.mediatailor.ap-southeast-1.amazonaws.com/v1/dash/7d6144f66f990e10fc667942d522b82f89ae5cd9/FAST_4_Ad/dash.mpd?aws.sessionId=58442df2-7820-4010-9a73-56381a7afe27|referer=https://visionplus.id/&User-agent=Mozilla/5.0 (Linux; Android 9; CPH2083 Build/PPR1.180610.011) AppleWebKit/537.36|drmScheme=clearkey&drmLicense=b541612bcb4598f60c4efc1733b5d8c9:7e6d2819c0912a204fd5478f8a60d1b5#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgJ8JXx7hoItAQXkywpBit4LEaYgSFsTsanFuLgwKHS2qERLZW7KHDi0yy1ILs3S-iOgseDaWKwv5gx_kRSnsLfqWLiKPjueHMMtANrmtKOTOQL7R13jDFuv7eB2eZ96kmIFLkxljpyO8qb4qNIfytKFbypA4-9cJdLuhwA7fXEY2IFkbigMhiZylfq3TI/s300/20240206-025703.png"  border="3px"></li>
<a href="intent://4940c5f69db24a558151436f708d5a69.mediatailor.ap-southeast-1.amazonaws.com/v1/dash/7d6144f66f990e10fc667942d522b82f89ae5cd9/FAST_3_Ad/dash.mpd?aws.sessionId=bd2627a3-77a3-4364-8072-da33bbff1c5e#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Golive;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh1RDTEQS9CumCj9Fe5_svHDjo9jm_b0wbwu0FbSxTFyZv6yPee8h7aXxOWKhtiy0CtNYb9sxa55YL1kcRcHqeILs6zW6nh3dh71NbroazXQZLTZu7BH6bKph6i79kZ_G8sxNTY_TsVL6aHanDJZsk2PZiQS8Pufn1ciTrusYY_oEd1AxYBRObRYmkzkxA/s300/20240206-033121.png"  border="3px"></li>
<a href="intent://068877e598224108a60fb9cd5db3717f.mediatailor.ap-southeast-1.amazonaws.com/v1/dash/7d6144f66f990e10fc667942d522b82f89ae5cd9/FAST_5_Ad/dash.mpd#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Golive;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://achithovhenrank01.github.io/jeco-play/Photo/20240206-033204(1).png"  border="3px"></li>
<a href="intent://d2idp3hzkhjpih.cloudfront.net/out/v1/4b85d9c2bf97413eb0c9fd875599b837/index.m3u8|referer=https://visionplus.id/&User-agent=Mozilla/5.0 (Linux; Android 9; CPH2083 Build/PPR1.180610.011) AppleWebKit/537.36|drmScheme=clearkey&drmLicense=47a1206b44822c89320e70916cf57b0c:e040ca2aa426df789ba384ba561891b4#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://achithovhenrank01.github.io/jeco-play/Photo/20240206-034039.png"  border="3px"></li>
<a href="intent://edge-sg1.vediostream.com/abr/tvikim/playlist.m3u8|referer=https://visionplus.id/&User-agent=Mozilla/5.0 (Linux; Android 9; CPH2083 Build/PPR1.180610.011) AppleWebKit/537.36|drmScheme=clearkey&drmLicense=47a1206b44822c89320e70916cf57b0c:e040ca2aa426df789ba384ba561891b4#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://achithovhenrank01.github.io/jeco-play/Photo/20240206-034046.png"  border="3px"></li>

<a href="intent://linearjitp02-playback.astro.com.my/dash-wv/dashiso/2407/default.mpd|drmScheme=clearkey&drmLicense=ea4d51ade01bbf3946e0de973051ba10:f3266bec607f25879f48640f30f1c888#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://achithovhenrank01.github.io/jeco-play/Photo/20240224-002024.png"  border="3px"></li>
<a href="intent://d1211whpimeups.cloudfront.net/smil:rtb1/chunklist.m3u8#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Golive;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://achithovhenrank01.github.io/jeco-play/Photo/20240315-004556.png"  border="3px"></li>
<a href="intent://d1211whpimeups.cloudfront.net/smil:rtb2/chunklist.m3u8#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Golive;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://achithovhenrank01.github.io/jeco-play/Photo/20240315-004619.png"  border="3px"></li>
<a href="intent://d1211whpimeups.cloudfront.net/smil:rtbgo/chunklist.m3u8#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Golive;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://achithovhenrank01.github.io/jeco-play/Photo/20240315-004635.png"  border="3px"></li>
<a href="intent://tglmp03.akamaized.net/out/v1/1057d89ee3d94148b430b5866e3a540a/manifest.mpd|drmScheme=clearkey&drmLicense=0328a153c2994b279ab03ab25102fc59:2cc69eaaa858fed24c5623654daf8d3d#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://achithovhenrank01.github.io/jeco-play/Photo/20240206-035633.png"  border="3px"></li>
<a href="intent://tglmp02.akamaized.net/out/v1/5081e069e08140c9b95f89a1659cf4dd/manifest.mpd|drmScheme=clearkey&drmLicense=607b7d22565c4bc3b95ff6c33ce65425:28cc5367df666c44be4382e64af64d57#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://achithovhenrank01.github.io/jeco-play/Photo/20240206-035640.png"  border="3px"></li>
<a href="intent://tglmp02.akamaized.net/out/v1/4f6561ad194b49ae93f4e1b075afdf41/manifest.mpd|drmScheme=clearkey&drmLicense=2448fc561b0c4220a81f1008971d3088:f48eb6753f3d1774da682970c93cf260#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://achithovhenrank01.github.io/jeco-play/Photo/20240206-035647.png"  border="3px"></li>
<a href="intent://tglmp04.akamaized.net/out/v1/b200e885125f4787bd2329952ff28fa1/manifest.mpd|drmScheme=clearkey&drmLicense=7a9ea6df52044841b0c562766e602610:b9380188b4896b25e8d419dfce938c6e#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://achithovhenrank01.github.io/jeco-play/Photo/20240206-035654.png"  border="3px"></li>
<a href="intent://tglmp03.akamaized.net/out/v1/14eb6e921cae41298efaa4d9db0f2875/manifest.mpd|drmScheme=clearkey&drmLicense=https://cloudtv-playback.stackstaging.com/astrogo.com.my/live/results.php?keyid=9970038ef6c548e39768f3a1ff6f5081&key=3e19d54b7bcd8bb336776fe136d48f57#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://achithovhenrank01.github.io/jeco-play/Photo/20240206-035703.png"  border="3px"></li>
<a href="intent://tglmp03.akamaized.net/out/v1/435d5ae6f4734fde963642147a852bfb/manifest.mpd|drmScheme=clearkey&drmLicense=https://cloudtv-playback.stackstaging.com/astrogo.com.my/live/results.php?keyid=7cb90b341f444e4ca3fb60de2ed3d6e5&key=5640220b78729773fbeaabc19a502b50#Intent;scheme=https;type=video/*;package=com.genuine.leone;S.browser_fallback_url=market://details?id=com.flax.media.player;S.title=Cilubba;end" allow="encrypted-media" scrolling="no" frameborder="0" height="0" width="0" gesture="media" allowfullscreen="allowfullscreen"><img src="https://achithovhenrank01.github.io/jeco-play/Photo/20240206-035712.png"  border="3px"></li>
<style>
img{border-radius: 20px ; border-color: white; padding: 2px; margin:5px; height:85px; width: 85px;}
		body{background-color: #1a1a1a;}
        </style>
<style>
  body {
  margin-left:0px;
  margin-right:0px;
    margin-top: 0px;
    background: #222;
    text-align: center; 
    color: #aaa;
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
</style>
<script id="wpcp_disable_selection" type="text/javascript">
//<![CDATA[
var image_save_msg='You Can Not Save images!';
	var no_menu_msg='Context Menu disabled!';
	var smessage = "Content is protected !!";

function disableEnterKey(e)
{
	if (e.ctrlKey){
     var key;
     if(window.event)
          key = window.event.keyCode;     //IE
     else
          key = e.which;     //firefox (97)
    //if (key != 17) alert(key);
     if (key == 97 || key == 65 || key == 67 || key == 99 || key == 88 || key == 120 || key == 26 || key == 85  || key == 86 || key == 83 || key == 43)
     {
          show_wpcp_message('You are not allowed to copy content or view source');
          return false;
     }else
     	return true;
     }
}

function disable_copy(e)
{	
	var elemtype = e.target.nodeName;
	var isSafari = /Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor);
	elemtype = elemtype.toUpperCase();
	var checker_IMG = '';
	if (elemtype == "IMG" && checker_IMG == 'checked' && e.detail >= 2) {show_wpcp_message(alertMsg_IMG);return false;}
	if (elemtype != "TEXT" && elemtype != "TEXTAREA" && elemtype != "INPUT" && elemtype != "PASSWORD" && elemtype != "SELECT" && elemtype != "OPTION" && elemtype != "EMBED")
	{
		if (smessage !== "" && e.detail == 2)
			show_wpcp_message(smessage);
		
		if (isSafari)
			return true;
		else
			return false;
	}	
}
function disable_copy_ie()
{
	var elemtype = window.event.srcElement.nodeName;
	elemtype = elemtype.toUpperCase();
	if (elemtype == "IMG") {show_wpcp_message(alertMsg_IMG);return false;}
	if (elemtype != "TEXT" && elemtype != "TEXTAREA" && elemtype != "INPUT" && elemtype != "PASSWORD" && elemtype != "SELECT" && elemtype != "OPTION" && elemtype != "EMBED")
	{
		//alert(navigator.userAgent.indexOf('MSIE'));
			//if (smessage !== "") show_wpcp_message(smessage);
		return false;
	}
}	
function reEnable()
{
	return true;
}
document.onkeydown = disableEnterKey;
document.onselectstart = disable_copy_ie;
if(navigator.userAgent.indexOf('MSIE')==-1)
{
	document.onmousedown = disable_copy;
	document.onclick = reEnable;
}
function disableSelection(target)
{
    //For IE This code will work
    if (typeof target.onselectstart!="undefined")
    target.onselectstart = disable_copy_ie;
    
    //For Firefox This code will work
    else if (typeof target.style.MozUserSelect!="undefined")
    {target.style.MozUserSelect="none";}
    
    //All other  (ie: Opera) This code will work
    else
    target.onmousedown=function(){return false}
    target.style.cursor = "default";
}
//Calling the JS function directly just after body load
window.onload = function(){disableSelection(document.body);};
//]]>
</script>
	<script id="wpcp_disable_Right_Click" type="text/javascript">
	//<![CDATA[
	document.ondragstart = function() { return false;}
	/* ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	Disable context menu on images by GreenLava Version 1.0
	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ */
	    function nocontext(e) {
	       return false;
	    }
	    document.oncontextmenu = nocontext;
	//]]>
	</script>
<style>
.unselectable
{
-moz-user-select:none;
-webkit-user-select:none;
cursor: default;
}
html
{
-webkit-touch-callout: none;
-webkit-user-select: none;
-khtml-user-select: none;
-moz-user-select: none;
-ms-user-select: none;
user-select: none;
-webkit-tap-highlight-color: rgba(0,0,0,0);
}
</style>
<script id="wpcp_css_disable_selection" type="text/javascript">
var e = document.getElementsByTagName('body')[0];
if(e)
{
	e.setAttribute('unselectable',on);
}
</script>
